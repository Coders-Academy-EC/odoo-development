# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2016-2019, IT-Projects LLC
# This file is distributed under the same license as the Odoo Development
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Odoo Development master\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-01-06 17:06+0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../maintenance/data-migration.rst:3
msgid "Data Migration"
msgstr ""

#: ../../maintenance/data-migration.rst:5
msgid ""
"Data Migration is a process of keeping correct data in database after "
"updating to new module version. For example, simple field renaming leads "
"to data lost if you don't have proper data migration scripts."
msgstr ""

#: ../../maintenance/data-migration.rst:7
msgid "For *Module Migration* see :doc:`Porting Modules<../migration/index>`"
msgstr ""

#: ../../maintenance/data-migration.rst:10
msgid "Preparing"
msgstr ""

#: ../../maintenance/data-migration.rst:12
msgid "Those migrations are between module version."
msgstr ""

#: ../../maintenance/data-migration.rst:14
msgid ""
"From Odoo "
"https://github.com/odoo/odoo/blob/11.0/odoo/modules/migration.py#L53:"
msgstr ""

#: ../../maintenance/data-migration.rst:16
msgid ""
"This class manage the migration of modules. Migrations files must be "
"python files containing a ``migrate(cr, installed_version)`` function. "
"Theses files must respect a directory tree structure: A 'migrations' "
"folder which contains a folder by version. Version can be 'module' "
"version or 'server.module' version (in this case, the files will only be "
"processed by this version of the server). Python file names must start by"
" *pre* or *post* and will be executed, respectively, before and after the"
" module initialisation. *end* scripts are run after all modules have been"
" updated."
msgstr ""

#: ../../maintenance/data-migration.rst:24
msgid "Example::"
msgstr ""

#: ../../maintenance/data-migration.rst:40
msgid "Execution"
msgstr ""

#: ../../maintenance/data-migration.rst:42
msgid ""
"Migration files are just code files that don't need to be registered "
"anywhere. When updating an addon Odoo searching in the *migrations* for "
"folders with a version in between, up to, and including the version that "
"is in updating for. It happens before all other files were observed, so "
"at this moment nothing is changed at your database layout. Then, if "
"folders are found Odoo executes python files with prefix *pre-* in it. "
"They should contain a defined function called migrate. This function has "
"two arguments: database cursor and currently installed version."
msgstr ""

#: ../../maintenance/data-migration.rst:48
msgid ""
"After all pre-migrate functions were successfully executed, Odoo updates "
"the module. Now, the database might be different from the previous "
"version one. For example, if in a new version we changed the model field "
"type, in the database this column will be changed without data "
"preserving. Or if a field was renamed, in the new version just a new "
"column will be created."
msgstr ""

#: ../../maintenance/data-migration.rst:53
msgid ""
"Then, after the module was updated, Odoo search for post-migrate files by"
" the same algorithm and execute them."
msgstr ""

#: ../../maintenance/data-migration.rst:55
msgid "*end* scripts are run after all modules have been updated."
msgstr ""

#: ../../maintenance/data-migration.rst:57
msgid ""
"Migration updates are not rollbacked if some errors happened later during"
" modules updating process. So, you shall always try to update module with"
" migration scripts on a copy first."
msgstr ""

#: ../../maintenance/data-migration.rst:60
msgid "Example"
msgstr ""

#: ../../maintenance/data-migration.rst:62
msgid ""
"*POS Debt & Credit notebook*. We need to preserve credit_product field "
"data in the ``product.template`` model after updating to a newer version."
" In previous version it was boolean field, now it is a many2one field "
"with the relation to ``account.journal`` model. Here, we, using a "
"temporary column, calculate transfer data from boolean to many2one "
"credit_product field."
msgstr ""

#: ../../maintenance/data-migration.rst:66
msgid "*pre-migrate.py*::"
msgstr ""

#: ../../maintenance/data-migration.rst:79
msgid "*post-migrate.py*::"
msgstr ""

#: ../../maintenance/index.rst:3
msgid "Maintenance"
msgstr ""

